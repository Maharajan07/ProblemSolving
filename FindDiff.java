/* 389. Find the Difference

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters. */

class FindDiff {
    public char findTheDifference(String s, String t) {
        boolean[] match = new boolean[s.length()];

        for (int i=0; i<t.length(); i++) {
            // char c = t.charAt(i);
            boolean found = false;

            for (int j=0; j<s.length(); j++) {
                if (!match[j] && s.charAt(j) == t.charAt(i)) {
                    match[j] = true;
                    found = true;
                    break;
                }
            }
            if (!found) return t.charAt(i);
        }
        return ' ';
    }
}

// Time Complexity: O(nÂ²)
// Space Complexity: O(n) -> for (used[])

/* // Optimized soln

class Solution {
    public char findTheDifference(String s, String t) {
        int sumS = 0;
        int sumT = 0;
        for (int i=0; i<s.length(); i++) {
            sumS += s.charAt(i);
        }
        for (int i=0; i<t.length(); i++) {
            sumT += t.charAt(i);
        }
        return (char) (sumT - sumS);
    }
}
    
// Time Complexity: O(n)
// Space Complexity: O(1) */